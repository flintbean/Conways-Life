{"version":3,"sources":["components/Board/Cell.js","components/Board/Board.js","App.js","index.js"],"names":["Cell","_this","this","react_default","a","createElement","className","concat","props","index","alive","onClick","toggleClick","Component","Board","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setBoard","matrix","state","slice","i","j","setState","generation","clickEnabled","findAlive","length","push","console","log","indexCheck","currMatrix","nextGen","newMatrix","neighborCount","speedChange","e","speed","target","value","playButton","interval","setInterval","pauseButton","clearInterval","clearButton","_this2","align","map","cell","components_Board_Cell","key","type","min","max","onChange","App","components_Board_Board","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.4e232a11.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./Cell.css\";\r\nclass Cell extends Component {\r\n    render() {\r\n        return (\r\n            <div className={`cell + ${this.props.index.alive}`} onClick={() => this.props.toggleClick(this.props.index)}>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cell;","import React, { Component } from 'react';\r\nimport './Board.css';\r\nimport Cell from './Cell';\r\n\r\nclass Board extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clickEnabled: true,\r\n            matrix: [],\r\n            generation: 0,\r\n            speed: 1000\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setBoard();\r\n    }\r\n\r\n    setBoard = () => {\r\n        let matrix = this.state.matrix.slice();\r\n        for (let i = 0; i < 15; i++) {\r\n            matrix[i] = [];\r\n            for (let j = 0; j < 15; j++) {\r\n                matrix[i][j] = { i, j, alive: false };\r\n            }\r\n        }\r\n        this.setState({ matrix, generation: 0, clickEnabled: true });\r\n    }\r\n\r\n    //Searches through entire matrix array and returns an array of all active cells\r\n    findAlive = () => {\r\n        let alive = [];\r\n        for (let i = 0; i < this.state.matrix.length; i++) {\r\n            for (let j = 0; j < this.state.matrix.length; j++) {\r\n                if (this.state.matrix[i][j].alive === true) {\r\n                    alive.push(this.state.matrix[i][j]);\r\n                }\r\n            }\r\n        }\r\n        return alive;\r\n    }\r\n\r\n    //Checks if game is active, if not then it toggles cell from dead to alive(false to true)\r\n    toggleClick = index => {\r\n        if (this.state.clickEnabled) {\r\n            let matrix = this.state.matrix.slice();\r\n            matrix[index.i][index.j].alive = !matrix[index.i][index.j].alive;\r\n\r\n            this.setState({ matrix });\r\n\r\n            console.log(\"Clicked Index\", matrix[index.i][index.j]);\r\n        }\r\n    }\r\n    //Checks if index is valid\r\n    indexCheck = (currMatrix, i, j) => {\r\n        if (i < 0 || i > 14 || j < 0 || j > 14) {\r\n            return null;\r\n        }\r\n        else if (currMatrix[i][j].alive) {\r\n            return true;\r\n        }\r\n        else{\r\n            return null;\r\n        }\r\n    }\r\n    nextGen = (currMatrix) => {\r\n        let newMatrix = [];\r\n        for (let i = 0; i < 15; ++i) {\r\n            newMatrix[i] = [];\r\n            for (let j = 0; j < 15; ++j) {\r\n                let neighborCount = 0;\r\n                if (this.indexCheck(currMatrix, currMatrix[i][j].i - 1, currMatrix[i][j].j + 1)) {\r\n                    neighborCount += 1;\r\n                }\r\n                if (this.indexCheck(currMatrix, currMatrix[i][j].i - 1, currMatrix[i][j].j)) {\r\n                    neighborCount += 1;\r\n                }\r\n                if (this.indexCheck(currMatrix, currMatrix[i][j].i - 1, currMatrix[i][j].j - 1)) {\r\n                    neighborCount += 1;\r\n                }\r\n                if (this.indexCheck(currMatrix, currMatrix[i][j].i, currMatrix[i][j].j - 1)) {\r\n                    neighborCount += 1;\r\n                }\r\n                if (this.indexCheck(currMatrix, currMatrix[i][j].i + 1, currMatrix[i][j].j - 1)) {\r\n                    neighborCount += 1;\r\n                }\r\n                if (this.indexCheck(currMatrix, currMatrix[i][j].i + 1, currMatrix[i][j].j)) {\r\n                    neighborCount += 1;\r\n                }\r\n                if (this.indexCheck(currMatrix, currMatrix[i][j].i + 1, currMatrix[i][j].j + 1)) {\r\n                    neighborCount += 1;\r\n                }\r\n                if (this.indexCheck(currMatrix, currMatrix[i][j].i, currMatrix[i][j].j + 1)) {\r\n                    neighborCount += 1;\r\n                }\r\n                if (currMatrix[i][j].alive && neighborCount >= 2 && neighborCount <= 3) {\r\n                    newMatrix[i][j] = { i: currMatrix[i][j].i, j: currMatrix[i][j].j, alive: true };\r\n                }\r\n                else if (!currMatrix[i][j].alive && neighborCount === 3) {\r\n                    newMatrix[i][j] = { i: currMatrix[i][j].i, j: currMatrix[i][j].j, alive: true };\r\n                }\r\n                else {\r\n                    newMatrix[i][j] = { i: currMatrix[i][j].i, j: currMatrix[i][j].j, alive: false };\r\n                }\r\n            }\r\n        }\r\n        return newMatrix;\r\n    }\r\n\r\n    speedChange = (e) => {\r\n        this.setState({ speed: e.target.value });\r\n    }\r\n\r\n    playButton = () => {\r\n        this.interval = setInterval(() => {\r\n            let matrix = this.state.matrix.slice();\r\n            let generation = this.state.generation;\r\n            matrix = this.nextGen(matrix);\r\n            generation++;\r\n\r\n            this.setState({ matrix, generation, clickEnabled: false });\r\n        }, this.state.speed);\r\n\r\n    }\r\n\r\n    pauseButton = () => {\r\n        clearInterval(this.interval);\r\n        this.setState({ clickEnabled: true })\r\n    }\r\n\r\n    clearButton = () => {\r\n        clearInterval(this.interval);\r\n        this.setBoard();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"interface-ctn\">\r\n\r\n                <p align=\"left\">Generation # {this.state.generation}</p>\r\n                <div className=\"board\">\r\n                    {\r\n                        this.state.matrix.map(cell => {\r\n                            return (\r\n                                cell.map((cell) => {\r\n                                    return (<Cell key={cell.i + cell.j} index={cell} clickEnabled={this.state.clickEnabled} toggleClick={this.toggleClick} />);\r\n                                })\r\n                            );\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"btn-ctn\">\r\n                    <button className=\"main-btn\" onClick={() => this.playButton()}>Play</button>\r\n                    <button className=\"main-btn\" onClick={() => this.pauseButton()}>Pause</button>\r\n                    <button className=\"main-btn\" onClick={() => this.clearButton()}>Clear</button>\r\n                </div>\r\n                <input\r\n                    type=\"range\"\r\n                    min=\"100\"\r\n                    max=\"1000\"\r\n                    value={this.state.speed}\r\n                    className=\"slider\"\r\n                    onChange={this.speedChange}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Board;","import React, { Component } from 'react';\nimport Board from './components/Board/Board'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <h4>Conways Game of Life</h4>\n        </div>\n        <div className=\"main-ctn\">\n          <div className=\"board-ctn\">\n            <Board />\n          </div>\n          <div className=\"rules-ctn\">\n            <ol>\n              <h4>Rules:</h4>\n              <li className=\"rule-item\">Any live cell with fewer than two live neighbors dies, as if by underpopulation.</li>\n              <li className=\"rule-item\">Any live cell with two or three live neighbors lives on to the next generation.</li>\n              <li className=\"rule-item\">Any live cell with more than three live neighbors dies, as if by overpopulation.</li>\n              <li className=\"rule-item\">Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.</li>\n            </ol>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}